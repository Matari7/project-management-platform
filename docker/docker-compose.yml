version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=arimcf10@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"       
      - "443:443"
      - "8080:8080"   
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - web
    labels:
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"

  frontend:
    build:
      context: ../frontend
    ports:
      - "3000:3000"
    working_dir: /app
    command: npm start
    labels:
    - "traefik.http.routers.frontend.rule=Host(`157.245.92.109`)"
    - "traefik.http.routers.frontend.entrypoints=websecure"
    - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - web

  login:
    build:
      context: ../login
    ports:
      - "5000:5000"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.login.rule=Host(`login.sea-turtle-app-ylpr8.ondigitalocean.app`)"
      - "traefik.http.routers.login.entrypoints=websecure"
      - "traefik.http.services.login.loadbalancer.server.port=5000"

  create-user:
    build:
      context: ../create-user
    ports:
      - "4001:4001"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.create-user.rule=Host(`create-user.sea-turtle-app-ylpr8.ondigitalocean.app`) && PathPrefix(`/create-user`)"
      - "traefik.http.routers.create-user.entrypoints=websecure"
      - "traefik.http.services.create-user.loadbalancer.server.port=4001"

  delete-user:
    build:
      context: ../delete-user
    ports:
      - "4002:4002"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.delete-user.rule=Host(`sea-turtle-app-ylpr8.ondigitalocean.app`) && PathPrefix(`/delete-user`)"
      - "traefik.http.routers.delete-user.entrypoints=websecure"
      - "traefik.http.services.delete-user.loadbalancer.server.port=4002"

  update-user:
    build:
      context: ../update-user
    ports:
      - "4003:4003"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.update-user.rule=Host(`update-user.localhost`)"
      - "traefik.http.services.update-user.loadbalancer.server.port=4003"

  read-user:
    build:
      context: ../read-user
    ports:
      - "4004:4004"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.read-user.rule=Host(`sea-turtle-app-ylpr8.ondigitalocean.app`) && PathPrefix(`/read-user`)"
      - "traefik.http.routers.read-user.entrypoints=websecure"
      - "traefik.http.services.read-user.loadbalancer.server.port=4004"

  createproject:
    build:
      context: ../createproject
    ports:
      - "4005:4005"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.createproject.rule=Host(`createproject.localhost`)"
      - "traefik.http.services.createproject.loadbalancer.server.port=4005"

  deleteproject:
    build:
      context: ../deleteproject
    ports:
      - "4006:4006"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.deleteproject.rule=Host(`deleteproject.localhost`)"
      - "traefik.http.services.deleteproject.loadbalancer.server.port=4006"

  updateproject:
    build:
      context: ../updateproject
    ports:
      - "4007:4007"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.updateproject.rule=Host(`updateproject.localhost`)"
      - "traefik.http.services.updateproject.loadbalancer.server.port=4007"

  readproject:
    build:
      context: ../readproject
    ports:
      - "4008:4008"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.readproject.rule=Host(`readproject.localhost`)"
      - "traefik.http.services.readproject.loadbalancer.server.port=4008"

  createcommentary:
    build:
      context: ../createcommentary
    ports:
      - "4009:4009"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.createcommentary.rule=Host(`createcommentary.localhost`)"
      - "traefik.http.services.createcommentary.loadbalancer.server.port=4009"

  deletecommentary:
    build:
      context: ../deletecommentary
    ports:
      - "4010:4010"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.deletecommentary.rule=Host(`deletecommentary.localhost`)"
      - "traefik.http.services.deletecommentary.loadbalancer.server.port=4010"

  updatecommentary:
    build:
      context: ../updatecommentary
    ports:
      - "4011:4011"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.updatecommentary.rule=Host(`updatecommentary.localhost`)"
      - "traefik.http.services.updatecommentary.loadbalancer.server.port=4011"

  readcommentaries:
    build:
      context: ../readcommentaries
    ports:
      - "4012:4012"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.readcommentaries.rule=Host(`readcommentaries.localhost`)"
      - "traefik.http.services.readcommentaries.loadbalancer.server.port=4012"

  createdocument:
    build:
      context: ../createdocument
    ports:
      - "4013:4013"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.createdocument.rule=Host(`createdocument.localhost`)"
      - "traefik.http.services.createdocument.loadbalancer.server.port=4013"

  deletedocument:
    build:
      context: ../deletedocument
    ports:
      - "4014:4014"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.deletedocument.rule=Host(`deletedocument.localhost`)"
      - "traefik.http.services.deletedocument.loadbalancer.server.port=4014"

  updatedocument:
    build:
      context: ../updatedocument
    ports:
      - "4015:4015"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.updatedocument.rule=Host(`updatedocument.localhost`)"
      - "traefik.http.services.updatedocument.loadbalancer.server.port=4015"

  chat-service:
    build:
      context: ../chat-service
    ports:
      - "8081:8081"
    working_dir: /app
    command: go run main.go
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.chat.rule=Host(`chat.localhost`)"
      - "traefik.http.services.chat.loadbalancer.server.port=8081"

  projectsubscriptionservice:
    build:
      context: ../projectSubscriptionService
    ports:
      - "4021:4021"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.projectSubscriptionService.rule=Host(`projectSubscriptionService.localhost`)"
      - "traefik.http.services.projectSubscriptionService.loadbalancer.server.port=4021"

  user-role-service:
    build:
      context: ../user-role-service
    ports:
      - "4023:4023"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.user-role-service.rule=Host(`user-role-service.localhost`)"
      - "traefik.http.services.user-role-service.loadbalancer.server.port=4023"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - web

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
    - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_MESSAGE_MAX_BYTES: 200000000 
      KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000
    networks:
      - web

      
  createtask-service:
    build:
      context: ../createtask-service
    ports:
      - "4024:4024"
    env_file:
      - .env
    working_dir: /app
    command: npm run start
    networks:
      - web
    labels:
      - "traefik.http.routers.createtask-service.rule=Host(`createtask-service.localhost`)"
      - "traefik.http.services.createtask-service.loadbalancer.server.port=4024"

  readtask-service:
    build:
      context: ../readtask-service
    ports:
      - "4025:4025"
    env_file:
      - .env
    working_dir: /app
    command: npm run start
    networks:
      - web
    labels:
      - "traefik.http.routers.readtask-service.rule=Host(`readtask-service.localhost`)"
      - "traefik.http.services.readtask-service.loadbalancer.server.port=4025"

  files:
    build:
      context: ../files
    ports:
      - "4028:4028"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.files.rule=Host(`files-service.localhost`)"
      - "traefik.http.services.files.loadbalancer.server.port=4028"

  product-service:
    build:
      context: ../product-service
    ports:
      - "4026:4026"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.product-service.rule=Host(`product-service.localhost`)"
      - "traefik.http.services.product-service.loadbalancer.server.port=4026"

  order-service:
    build:
      context: ../order-service
    ports:
      - "4027:4027"
    env_file:
      - .env
    networks:
      - web
    labels:
      - "traefik.http.routers.order-service.rule=Host(`order-service.localhost`)"
      - "traefik.http.services.order-service.loadbalancer.server.port=4027"


networks:
  web:
    external: true
