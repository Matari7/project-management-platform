name: Deploy to AWS ECR
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Build and push createproject
        env:
          SERVICE_NAME: createproject
        run: |
          docker build -t $SERVICE_NAME ./createproject
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push create-user
        env:
          SERVICE_NAME: create-user
        run: |
          docker build -t $SERVICE_NAME ./create-user
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push createcommentary
        env:
          SERVICE_NAME: createcommentary
        run: |
          docker build -t $SERVICE_NAME ./createcommentary
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push createdocument
        env:
          SERVICE_NAME: createdocument
        run: |
          docker build -t $SERVICE_NAME ./createdocument
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push delete-user
        env:
          SERVICE_NAME: delete-user
        run: |
          docker build -t $SERVICE_NAME ./delete-user
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push deletecommentary
        env:
          SERVICE_NAME: deletecommentary
        run: |
          docker build -t $SERVICE_NAME ./deletecommentary
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push deletedocument
        env:
          SERVICE_NAME: deletedocument
        run: |
          docker build -t $SERVICE_NAME ./deletedocument
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push deleteproject
        env:
          SERVICE_NAME: deleteproject
        run: |
          docker build -t $SERVICE_NAME ./deleteproject
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push login
        env:
          SERVICE_NAME: login
        run: |
          docker build -t $SERVICE_NAME ./login
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push notificationhistory
        env:
          SERVICE_NAME: notificationhistory
        run: |
          docker build -t $SERVICE_NAME ./notificationhistory
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push read-user
        env:
          SERVICE_NAME: read-user
        run: |
          docker build -t $SERVICE_NAME ./read-user
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push readcommentaries
        env:
          SERVICE_NAME: readcommentaries
        run: |
          docker build -t $SERVICE_NAME ./readcommentaries
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push readdocument
        env:
          SERVICE_NAME: readdocument
        run: |
          docker build -t $SERVICE_NAME ./readdocument
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push readproject
        env:
          SERVICE_NAME: readproject
        run: |
          docker build -t $SERVICE_NAME ./readproject
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push receivenotification
        env:
          SERVICE_NAME: receivenotification
        run: |
          docker build -t $SERVICE_NAME ./receivenotification
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push sendnotification
        env:
          SERVICE_NAME: sendnotification
        run: |
          docker build -t $SERVICE_NAME ./sendnotification
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push update-user
        env:
          SERVICE_NAME: update-user
        run: |
          docker build -t $SERVICE_NAME ./update-user
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push updatecommentary
        env:
          SERVICE_NAME: updatecommentary
        run: |
          docker build -t $SERVICE_NAME ./updatecommentary
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push updatedocument
        env:
          SERVICE_NAME: updatedocument
        run: |
          docker build -t $SERVICE_NAME ./updatedocument
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

      - name: Build and push updateproject
        env:
          SERVICE_NAME: updateproject
        run: |
          docker build -t $SERVICE_NAME ./updateproject
          docker tag $SERVICE_NAME:latest ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/$SERVICE_NAME:latest

# Repetir para los dem√°s microservicios
      # ...